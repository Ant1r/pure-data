#N struct template11 float x float y float a float b float n;
#N canvas 276 36 621 555 12;
#N canvas 243 114 642 518 template11 0;
#X obj 126 386 drawpolygon 0 1 20 20 20 -20 -20 -20 -20 20 20 20;
#X obj 123 252 drawcurve -v b 900 2 a(0:100)(0:100) 0 a(0:100)(0:71)
a(0:100)(0:71) 0 a(0:100)(0:100) a(0:100)(0:-71) a(0:100)(0:71) a(0:100)(0:-100)
0 a(0:100)(0:-71) a(0:100)(0:-71) 0 a(0:100)(0:-100) a(0:100)(0:71)
a(0:100)(0:-71) a(0:100)(0:100) 0;
#X obj 441 148 tgl 15 0 empty empty empty 0 -6 0 8 #fcfcfc #000000
#000000 0 1;
#X obj 441 25 inlet;
#X obj 69 458 outlet;
#X text 164 148 show/hide this drawing instruction --> globally via
the inlet, f 38;
#X text 124 208 draw a "circle" of radius a \, visible when b != 0
(inlet is deactivated), f 49;
#X text 129 360 this is a square that is always visible;
#X obj 441 173 drawnumber -n b -5 8 0;
#X obj 69 105 struct template11 float x float y float a float b float
n, f 33;
#X text 24 47 Template demonstrating turning a drawing instruction
on and off. Field values are x/y coordinates \, 'a' (radius) \, 'b'
(visibility) and 'n' (object number)., f 53;
#X connect 2 0 8 0;
#X connect 3 0 2 0;
#X connect 9 0 4 0;
#X restore 89 263 pd template11;
#N canvas 912 70 310 309 data11 1;
#X scalar template11 107 222 15 1 0 \;;
#X scalar template11 197 174 15 1 1 \;;
#X scalar template11 106 117 15 1 2 \;;
#X coords 0 309 1 308 0 0 0;
#X restore 444 278 pd data11;
#X text 21 17 Drawing instructions can be dynamically turned on and
off \, either globally for all data of a given template \, or locally
according to a data field. In this example the "drawcurve" instruction's
arguments contain the leading flag "-v b" meaning that its visibility
is turned on and off by the field b., f 82;
#X text 21 82 To turn a drawing instruction on and off globally \,
send a number to its inlet. By default drawing instructions are initially
visible \, unless given the "-n" flag., f 82;
#X text 21 120 Arrays have the additional possibility of turning on
and off drawing instructions for their individual points as scalars.
Use "-vs z" to make the variable z control this., f 82;
#X obj 276 462 pointer;
#X obj 118 499 set template11 b, f 23;
#X obj 118 469 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000
#000000 0 1;
#X msg 276 406 traverse pd-data11 \, next;
#X msg 315 434 next;
#X obj 89 233 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000
#000000 0 1;
#X text 390 508 updated for Pd version 0.52;
#X text 193 263 <-- open template;
#X text 115 232 globally turn on/off number drawing instruction.;
#X msg 118 441 set \$1;
#X text 278 386 click here first;
#X text 360 427 go to next and loop, f 11;
#N canvas 47 74 859 360 set/get 0;
#X obj 213 240 set template11 b;
#X obj 117 72 route click;
#X msg 337 160 set \$1;
#X obj 213 214 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000
#000000 0 1;
#X obj 154 247 pack;
#X obj 337 133 get template11 b;
#X obj 117 140 get template11 n;
#X obj 154 281 outlet;
#X obj 117 38 inlet;
#X obj 117 103 trigger pointer bang pointer;
#X text 416 166 The [struct] object sends a 'click' message with the
pointer to the clicked object and we use this to get the value of 'b'
and set to the opposite state. Next we get the value of 'n' to route
and get the toggle value on the parent window., f 46;
#X connect 1 0 9 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 3 0 4 1;
#X connect 4 0 7 0;
#X connect 5 0 2 0;
#X connect 6 0 4 0;
#X connect 8 0 1 0;
#X connect 9 0 6 0;
#X connect 9 1 3 0;
#X connect 9 2 5 0;
#X connect 9 2 0 1;
#X restore 89 295 pd set/get;
#X obj 89 327 route 0 1 2;
#X obj 89 360 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 113 360 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 138 360 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X text 21 173 This example also allows you to turn the state of the
scalars "on" or "off" by clicking on them then get the data in the
patch. See [pd set/get] for details., f 82;
#X text 172 295 <-- set/get values from clicks;
#X text 244 342 you can also traverse and set value of 'b' field locally
this way., f 38;
#X obj 118 406 get template11 b n;
#X floatatom 241 431 3 0 0 0 - - - 0;
#X connect 0 0 17 0;
#X connect 5 0 6 1;
#X connect 5 0 25 0;
#X connect 5 1 8 0;
#X connect 7 0 6 0;
#X connect 8 0 5 0;
#X connect 9 0 5 0;
#X connect 10 0 0 0;
#X connect 14 0 7 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 18 1 20 0;
#X connect 18 2 21 0;
#X connect 25 0 14 0;
#X connect 25 1 26 0;
