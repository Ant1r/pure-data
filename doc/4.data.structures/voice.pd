#N canvas 388 23 909 689 12;
#X obj 199 114 inlet;
#X obj 258 428 line~;
#X obj 211 303 sqrt;
#X obj 258 573 *~;
#X obj 258 452 *~;
#X obj 258 476 *~;
#X obj 258 622 outlet~;
#X obj 543 394 line~;
#X obj 543 418 *~;
#X obj 543 442 *~;
#X obj 443 286 mtof;
#X obj 443 220 +;
#X obj 443 310 sqrt;
#X obj 443 334 sqrt;
#X obj 543 370 pack;
#X obj 183 349 r reset;
#X msg 183 373 0 20;
#X obj 55 238 data-array template-toplevel amp template-amp;
#X obj 443 180 data-array template-toplevel pitch template-pitch;
#X obj 393 420 noise~;
#X obj 494 262 +;
#X obj 494 285 mtof;
#X obj 494 309 sqrt;
#X obj 494 333 sqrt;
#X obj 594 394 line~;
#X obj 594 418 *~;
#X obj 594 442 *~;
#X obj 594 370 pack;
#X obj 493 394 line~;
#X obj 493 418 *~;
#X obj 493 442 *~;
#X obj 493 370 pack;
#X obj 393 287 mtof;
#X obj 393 311 sqrt;
#X obj 393 335 sqrt;
#X obj 393 265 -;
#X obj 318 503 vcf~ 10;
#X obj 393 503 vcf~ 10;
#X obj 468 499 vcf~ 10;
#X text 633 432 calculate time-varying center frequencies, f 22;
#X text 531 497 ... for three VCFs acting on a noise source.;
#X text 174 434 Amplitude;
#X text 175 450 envelope;
#X obj 211 276 / 2;
#X obj 258 344 pack float float;
#N canvas 457 62 745 553 data-start 0;
#X obj 179 153 inlet;
#X obj 280 389 *;
#X obj 73 217 r reset-stop;
#X obj 165 500 outlet;
#X obj 455 500 outlet;
#X obj 165 443 pointer;
#X text 79 94 outlets: pointer (delayed) \, y-value., f 53;
#X obj 179 218 t b p;
#X obj 133 419 t b b;
#X obj 298 303 r time-of-last-evt;
#X obj 280 332 -;
#X obj 248 236 t f f;
#X obj 76 458 s next-evt;
#X obj 269 271 s time-of-last-evt;
#X obj 298 363 r delay-multiplier;
#X text 79 45 Here we carry out the actual sequencing. Argument is
template of the scalar. Note the sends and receives which must agree
with the rest of the patch., f 78;
#X obj 133 393 delay;
#X obj 248 204 get template-toplevel x y, f 30;
#X connect 0 0 7 0;
#X connect 1 0 16 1;
#X connect 2 0 16 0;
#X connect 5 0 3 0;
#X connect 7 0 16 0;
#X connect 7 1 5 1;
#X connect 7 1 17 0;
#X connect 8 0 12 0;
#X connect 8 1 5 0;
#X connect 9 0 10 1;
#X connect 10 0 1 0;
#X connect 11 0 13 0;
#X connect 11 1 10 0;
#X connect 14 0 1 1;
#X connect 16 0 8 0;
#X connect 17 0 11 0;
#X connect 17 1 4 0;
#X restore 199 142 pd data-start;
#X text 71 36 This is an abstraction used in the sequencer example.
Here we take care of the audio synthesis \, according to timed controls
from [pd data-start] and [data-array] subpatches., f 62;
#X text 538 37 Pitch is in eighth-tones (because 4 pixels per half
tone looks reasonable on the screen.), f 47;
#X connect 0 0 45 0;
#X connect 1 0 4 0;
#X connect 1 0 4 1;
#X connect 2 0 44 0;
#X connect 3 0 6 0;
#X connect 4 0 5 0;
#X connect 4 0 5 1;
#X connect 5 0 3 0;
#X connect 7 0 8 0;
#X connect 7 0 8 1;
#X connect 8 0 9 0;
#X connect 8 0 9 1;
#X connect 9 0 37 1;
#X connect 10 0 12 0;
#X connect 11 0 35 0;
#X connect 11 0 10 0;
#X connect 11 0 20 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 7 0;
#X connect 15 0 16 0;
#X connect 16 0 1 0;
#X connect 17 1 43 0;
#X connect 17 2 44 1;
#X connect 18 0 11 0;
#X connect 18 1 35 1;
#X connect 18 1 20 1;
#X connect 18 2 14 1;
#X connect 18 2 31 1;
#X connect 18 2 27 1;
#X connect 19 0 36 0;
#X connect 19 0 37 0;
#X connect 19 0 38 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 27 0;
#X connect 24 0 25 0;
#X connect 24 0 25 1;
#X connect 25 0 26 0;
#X connect 25 0 26 1;
#X connect 26 0 38 1;
#X connect 27 0 24 0;
#X connect 28 0 29 0;
#X connect 28 0 29 1;
#X connect 29 0 30 0;
#X connect 29 0 30 1;
#X connect 30 0 36 1;
#X connect 31 0 28 0;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 34 0 31 0;
#X connect 35 0 32 0;
#X connect 36 0 3 1;
#X connect 37 0 3 1;
#X connect 38 0 3 1;
#X connect 43 0 2 0;
#X connect 44 0 1 0;
#X connect 45 0 18 0;
#X connect 45 0 17 0;
#X connect 45 1 11 1;
