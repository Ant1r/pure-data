#N canvas 400 49 837 748 12;
#X declare -stdpath ./;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-waveform 882 float 0;
#X coords 0 1.02 881 -1.02 200 130 1;
#X restore 530 363 graph;
#X floatatom 43 64 5 0 0 0 - - - 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-env 22050 float 0;
#X coords 0 1.02 22049 -1.02 200 130 1;
#X restore 530 142 graph;
#X obj 43 95 phasor~;
#X obj 50 603 output~;
#X obj 74 134 *~;
#X obj 43 213 -~;
#X obj 43 250 *~;
#X floatatom 113 96 4 0 100 0 - - - 0;
#X obj 49 288 min~;
#X floatatom 108 152 3 0 100 0 - - - 0;
#X obj 108 175 / 100;
#X floatatom 101 208 3 0 100 0 - - - 0;
#X obj 92 452 *~ 2;
#X obj 92 480 min~;
#X obj 143 452 -~ 1;
#X obj 92 424 phasor~ 200;
#X obj 50 548 *~;
#X obj 91 395 tabwrite~ \$0-env;
#X obj 101 231 * -1;
#X obj 106 536 bng 19 250 50 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000;
#X obj 92 561 tabwrite~ \$0-waveform;
#X obj 143 480 *~ -3;
#X obj 92 506 -~ 0.5;
#X text 550 505 ----- 0.02 second ----;
#X text 545 278 ----- 0.5 second ------;
#X text 167 166 Subtract this to make the phasor cross zero at the desired point of the cycle., f 48;
#X text 143 225 multiply the phasor (with the zero crossing shifted as above) by the desired slope \, negating it so the segment points downward., f 43;
#X text 87 281 minimum of rise and decay segments (makes a triangle wave), f 32;
#X obj 49 330 clip~ 0 1;
#X text 125 324 clip the triangle wave to between 0 and 1 \, to make the sustain and silent regions., f 42;
#X text 191 443 this makes a quick-and-dirty triangle wave;
#X text 191 459 as described in the previous patch. It's, f 42;
#X text 191 475 used here so we'll have something to listen to., f 42;
#X obj 582 41 declare -stdpath ./;
#X text 129 536 <-- click to graph audio waveform;
#X obj 91 367 bng 19 250 50 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000;
#X text 115 365 <-- click to graph envelope shape;
#X text 82 64 <-- frequency (Hz.);
#X text 147 96 <-- slope of rise segment. Just multiply this by the phase to make the segment., f 40;
#X text 139 150 <-- Duty cycle (end of decay segment as % of cycle.);
#X text 130 207 <-- slope of decay segment.;
#X text 263 571 You can make a phasor-generated envelope generator using [min~] and [clip~] to combine line segments. Here a rise segment starts at phase 0 \, and a decay segment passes through zero at a controllable point (the "duty cycle" \, as a percentage of a cycle.) Each has a controllable slope (in units per cycle). The resulting triangle wave (the minimum of the rise and decay segments) is limited to 1 \, thus making a flat "sustain" segment (unless the rise and decay segments meet at a value less than one \, in which case there is none). Limiting below by 0 prevents us from following the decay segment into negative values. Reasonable values to start with are 6 Hz. frequency \, rise and decay slope 10 \, duty cycle 75%., f 73;
#X obj 62 15 cnv 5 5 25 empty empty Envelope\ Generators\ From\ Line\ Segments 15 13 0 16 #dfdfdf #202020 0;
#X connect 1 0 3 0;
#X connect 3 0 5 0;
#X connect 3 0 6 0;
#X connect 5 0 9 1;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X connect 8 0 5 1;
#X connect 9 0 29 0;
#X connect 10 0 11 0;
#X connect 11 0 6 1;
#X connect 12 0 19 0;
#X connect 13 0 14 0;
#X connect 14 0 23 0;
#X connect 15 0 22 0;
#X connect 16 0 13 0;
#X connect 16 0 15 0;
#X connect 17 0 4 0;
#X connect 19 0 7 1;
#X connect 20 0 21 0;
#X connect 22 0 14 1;
#X connect 23 0 21 0;
#X connect 23 0 17 1;
#X connect 29 0 17 0;
#X connect 29 0 18 0;
#X connect 36 0 18 0;
