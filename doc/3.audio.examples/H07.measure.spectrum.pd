#N canvas 453 38 655 862 12;
#X declare -stdpath ./;
#X obj 145 571 bp~;
#X obj 122 532 bp~;
#X obj 154 443 mtof;
#X floatatom 154 470 7 0 0 0 - - - 0;
#X floatatom 163 496 4 0 999 0 - \$0-q - 0;
#X floatatom 154 421 7 0 150 0 - \$0-pitch - 0;
#X obj 61 614 env~ 4096;
#X obj 122 334 *~ 0;
#X obj 122 359 +~ 1;
#X text 35 51 In this example we use two cascaded band-pass filters to troll for partials in Jonathan Harvey's famous bell sample., f 82;
#X text 35 198 You can hear partials around 48 \, 51.3 \, 55 (faint!) \, 57 (fainter!) \, 60 \, two beating partials around 65 \, 67 \, 69 \, 70.9 \, 71.75 \, 72.6 \, 74 \, 74.65 \, 75.6 \, 77 \, 81.2 \, 84.6 \, 86.5 \, and probably many more. There's also one down at 36 \, but it's easier to see it on the meter than hear it., f 82;
#X text 189 445 (shift-drag to fine tune);
#X obj 145 711 output~;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-array 155944 float 2;
#X coords 0 1 155944 -1 274 101 1;
#X restore 315 283 graph;
#X obj 122 286 r \$0-loopf;
#X obj 122 310 phasor~;
#X obj 122 383 tabread4~ \$0-array;
#X obj 166 334 r \$0-totsamps;
#X text 38 19 MEASURING SPECTRA USING BAND-PASS FILTERS;
#N canvas 717 163 409 449 init 0;
#X obj 81 239 soundfiler;
#X obj 81 33 loadbang;
#X obj 81 59 bng 19 250 50 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000;
#X obj 101 90 f \$0;
#X obj 116 367 /;
#X msg 81 337 44100;
#X obj 81 308 t b f, f 8;
#X obj 116 396 s \$0-loopf;
#X msg 81 208 read -resize ../sound/bell.aiff \$1;
#X obj 197 330 declare -stdpath ./;
#X obj 103 275 s \$0-totsamps;
#X obj 81 178 symbol \$0-array;
#X msg 101 117 \; \$1-pitch 69 \; \$1-q 0;
#X text 221 78 This subpatch initializes the patch \, loads the sample and values into number boxes, f 17;
#X connect 0 0 10 0;
#X connect 0 0 6 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 11 0;
#X connect 3 0 12 0;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 6 1 4 1;
#X connect 8 0 0 0;
#X connect 11 0 8 0;
#X restore 535 401 pd init;
#X text 198 496 <-- Q (filter selectivity);
#X text 210 471 <-- center frequency;
#X text 210 420 <-- center pitch;
#X floatatom 193 533 5 0 20 0 - - - 0;
#X text 234 532 <-- add up to 20 dB;
#X text 35 89 Note that filters can give unexpected level changes. The [bp~] object is designed to have roughly unit gain at the pass band \, so the higher you set "Q" the more amplitude is lost. You can correct for this by pushing the output amplitude \, but be sure to remember to reset the output amplitude before you reduce Q again. I set the Q to 100 and add an amplitude gain of 10 or 20 (with the [output~] volume way down!) Then holding the shift key \, slowly drag the center pitch upward listening for modes., f 82;
#X obj 193 631 dbtorms~;
#X obj 193 556 pack f 20;
#X obj 193 580 line~;
#X obj 193 605 +~ 100;
#X obj 145 670 *~;
#X text 411 795 updated for Pd version 0.55;
#X obj 62 679 vu 21 160 empty empty -1 -10 0 12 #404040 #000000 1 0;
#X obj 61 645 - 100;
#X text 130 799 <-- the [vu] object is used to display values in dBFS, f 27;
#X text 263 627 convert to amplitude values (up to 10), f 21;
#X connect 0 0 6 0;
#X connect 0 0 30 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 1 1;
#X connect 3 0 0 1;
#X connect 4 0 1 2;
#X connect 4 0 0 2;
#X connect 5 0 2 0;
#X connect 6 0 33 0;
#X connect 7 0 8 0;
#X connect 8 0 16 0;
#X connect 14 0 15 0;
#X connect 15 0 7 0;
#X connect 16 0 1 0;
#X connect 17 0 7 1;
#X connect 23 0 27 0;
#X connect 26 0 30 1;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X connect 29 0 26 0;
#X connect 30 0 12 0;
#X connect 33 0 32 0;
