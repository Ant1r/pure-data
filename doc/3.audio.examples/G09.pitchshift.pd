#N canvas 407 47 769 686 12;
#X declare -stdpath ./;
#X floatatom 101 79 6 0 0 0 - - - 0;
#X obj 101 450 *~;
#X obj 224 376 line~;
#X floatatom 224 131 6 0 0 0 - - - 0;
#X obj 224 105 r window;
#X obj 101 53 r transpose;
#X obj 101 135 exp;
#X floatatom 101 161 6 0 0 0 - - - 0;
#X obj 101 251 /;
#X obj 149 188 * 0.001;
#X obj 287 440 line~;
#X floatatom 287 364 8 0 0 0 - - - 0;
#X obj 287 338 r delay;
#X obj 101 487 +~;
#X obj 45 502 cos~;
#X obj 45 529 *~;
#X obj 165 573 +~;
#X obj 165 376 wrap~;
#X obj 241 435 *~;
#X obj 269 495 +~;
#X obj 183 512 cos~;
#X obj 183 539 *~;
#X msg 617 184 \; transpose 0 \; window 100 \; delay 0;
#X obj 617 158 loadbang;
#X obj 149 214 t b f;
#X floatatom 101 277 6 0 0 0 - - - 0;
#X obj 165 349 +~ 0.5;
#X obj 45 450 -~ 0.5;
#X obj 45 476 *~ 0.5;
#X obj 183 435 -~ 0.5;
#X obj 183 484 *~ 0.5;
#X obj 101 188 - 1;
#X obj 101 109 * 0.05776;
#X obj 101 214 * -1;
#X text 54 155 speed;
#X text 47 169 change;
#X text 29 268 tape head;
#N canvas 627 195 565 379 test-input 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array array1 155944 float 2;
#X coords 0 1 155944 -1 200 150 1;
#X restore 302 170 graph;
#X obj 91 240 tabread4~ array1;
#X obj 63 52 r totsamps;
#X obj 91 135 /;
#X obj 91 187 *~ 0;
#X obj 91 214 +~ 1;
#X msg 63 108 44100;
#X obj 63 82 t b f, f 7;
#X obj 134 191 r totsamps;
#X obj 91 312 outlet~;
#X obj 193 111 soundfiler;
#X obj 193 139 s totsamps;
#X obj 91 161 phasor~;
#X msg 193 83 read -resize ../sound/bell.aiff array1;
#X obj 193 54 loadbang;
#X text 103 269 sample loop for test signal, f 16;
#X connect 1 0 9 0;
#X connect 2 0 7 0;
#X connect 3 0 12 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X connect 6 0 3 0;
#X connect 7 0 6 0;
#X connect 7 1 3 1;
#X connect 8 0 4 1;
#X connect 10 0 11 0;
#X connect 12 0 4 0;
#X connect 13 0 10 0;
#X connect 14 0 13 0;
#X restore 392 186 pd test-input;
#X obj 165 601 output~;
#X obj 101 308 phasor~;
#X obj 287 391 max 1.5;
#X text 290 297 delay;
#X text 287 315 (msec);
#X obj 224 158 max 1;
#X text 29 281 rotation freq, f 9;
#X obj 392 217 delwrite~ G09-del 5000;
#X obj 536 86 declare -stdpath ./;
#X obj 269 524 delread4~ G09-del, f 9;
#X obj 101 513 delread4~ G09-del, f 9;
#X text 275 131 <-- window (msec);
#X msg 224 349 \$1 200;
#X msg 287 415 \$1 200;
#X text 151 79 <-- transposition in halftones;
#X text 372 289 This is a classic rotating-tape-head style pitch shifter using the [delread4~] variable delay object. There are two moving tape heads \, each of which is loudest at the middle of its trajectory \, and enveloped out at the moment it has to jump back (or forward) to start another scratch. Most of the brain work is in computing how fast the tape heads have to move to get the desired transposition., f 52;
#X text 371 519 The [cos~] objects compute the fadein and fadeout of the two delay line outputs. They each traverse the positive half of the cosine waveform (phase -0.25 to +0.25) over the time the phase goes from one end to the other., f 52;
#X text 371 423 The "window size" is the total trajectory of the read points in the delay line \, in milliseconds. The delay times are controlled by a [phasor~] object. The second delay time \, 180 degrees out of phase from the first one \, is computed using the [wrap~] object., f 52;
#X obj 311 26 cnv 5 5 25 empty empty Pitch\ Shifter 15 13 0 16 #dfdfdf #202020 0;
#X connect 0 0 32 0;
#X connect 1 0 13 0;
#X connect 2 0 1 1;
#X connect 2 0 18 1;
#X connect 3 0 43 0;
#X connect 4 0 3 0;
#X connect 5 0 0 0;
#X connect 6 0 7 0;
#X connect 7 0 31 0;
#X connect 8 0 25 0;
#X connect 9 0 24 0;
#X connect 10 0 13 1;
#X connect 10 0 19 1;
#X connect 11 0 40 0;
#X connect 12 0 11 0;
#X connect 13 0 48 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 38 0;
#X connect 17 0 18 0;
#X connect 17 0 29 0;
#X connect 18 0 19 0;
#X connect 19 0 47 0;
#X connect 20 0 21 0;
#X connect 21 0 16 1;
#X connect 23 0 22 0;
#X connect 24 0 8 0;
#X connect 24 1 8 1;
#X connect 25 0 39 0;
#X connect 26 0 17 0;
#X connect 27 0 28 0;
#X connect 28 0 14 0;
#X connect 29 0 30 0;
#X connect 30 0 20 0;
#X connect 31 0 33 0;
#X connect 32 0 6 0;
#X connect 33 0 8 0;
#X connect 37 0 45 0;
#X connect 39 0 1 0;
#X connect 39 0 27 0;
#X connect 39 0 26 0;
#X connect 40 0 51 0;
#X connect 43 0 9 0;
#X connect 43 0 50 0;
#X connect 47 0 21 1;
#X connect 48 0 15 1;
#X connect 50 0 2 0;
#X connect 51 0 10 0;
