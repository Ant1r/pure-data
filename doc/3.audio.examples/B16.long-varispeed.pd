#N canvas 346 38 960 867 12;
#X declare -stdpath ./;
#X obj 505 529 metro 100;
#X obj 238 456 phasor~;
#X obj 505 559 snapshot~;
#X obj 37 621 output~;
#X obj 38 445 phasor~;
#X floatatom 38 313 5 -100 1000 0 - - - 0;
#X obj 37 502 tabread4~ \$0-tab;
#X msg 368 313 0.5;
#X msg 404 313 0.01;
#X obj 505 442 loadbang;
#X msg 505 468 1;
#X obj 418 649 +;
#X obj 238 714 tabread4~ \$0-tab;
#X obj 476 649 f;
#X obj 386 626 t f f;
#X obj 238 750 output~;
#X floatatom 487 683 8 0 0 0 - - - 0;
#X obj 418 684 t f b;
#X obj 450 713 f;
#X obj 418 713 -;
#X floatatom 568 618 8 0 0 0 - - - 0;
#X obj 400 740 -;
#X obj 505 504 tgl 18 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 238 482 -~ 0.5;
#X obj 400 829 + 0.5;
#X obj 37 474 *~ 1e+06;
#X floatatom 400 770 8 0 0 0 - - - 0;
#X obj 618 538 samplerate~;
#X obj 586 537 /;
#X obj 586 512 t f b;
#X obj 568 592 +;
#X obj 400 801 / 10000;
#X obj 238 507 *~ 10000;
#X obj 586 563 * 10000;
#X obj 571 169 samplerate~;
#X obj 571 193 / 2;
#X obj 560 244 tabwrite~ \$0-tab;
#X obj 571 217 osc~;
#X obj 560 124 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X obj 713 238 table \$0-tab 1e+06;
#X obj 38 417 / 1e+06;
#X text 549 682 new onset is phase plus old onset;
#X obj 404 341 * 1e+06;
#X text 631 620 extrapolated phase of next sample;
#X text 482 714 new onset minus old onset;
#X text 470 748 back up phasor output by amount the onset advanced;
#X text 468 761 (approximately zero but not exactly because of;
#X text 470 775 truncation error!);
#X obj 404 367 t b f;
#X text 463 341 convert to samples;
#X text 448 368 set both last-onset and previous-onset;
#X text 448 391 ... and also reset phasor.;
#X text 465 801 convert phase back to range 0-1, f 17;
#X obj 238 419 / 10000;
#X text 45 393 cycles/sec;
#X text 45 381 convert to;
#X text 296 419 cycles/sec;
#X text 240 395 convert to;
#X text 67 685 BAD;
#X text 273 812 GOOD;
#X text 92 13 VARIABLE SPEED PLAYBACK FROM LONG TABLES;
#X msg 386 399 0;
#X text 634 503 extrapolate snapshot of phase by one sample to sync with next block, f 34;
#X obj 737 15 declare -stdpath ./;
#X msg 669 162 \; pd dsp 1 \, fast-forward 22680;
#X text 539 55 *** The table is now 1 million points and takes about 23 seconds to fill \, we also use the 'fast-forward' message to fill it., f 47;
#X text 24 43 Here is how to use the [tabread~]'s "onset" input to allow clean varispeed playback from a long table. At left \, a [phasor~] is naively rescaled to the size of the table. At right \, the [phasor~] gets only a 10000-point range about a moving "onset". Ten times per second \, we poll the [phasor~]'s phase \, sum its value into the onset \, and back up the phase of the [phasor~] correspondingly., f 69;
#X text 24 133 The tricky bits are \, first \, that we need to poll the [phasor~]'s phase one sample into the future (so we add the per-sample increment into the [snapshot~] result). Second \, we can't just reset the [phasor~] to a fixed point - instead \, we measure how much the onset has actually increased (which has truncation error from summing in the phase snapshot) \, and subtract that increase from the phase \, giving a value that differs from zero by the truncation error but reflects the true phase we should reset to for continuity., f 69;
#X text 24 252 The metronome rate is arbitrary but should be fast enough that the [phasor~] never has time to wrap., f 69;
#X text 447 312 <-- reset phase. 0.5 causes trouble for the "bad" way.;
#X text 86 312 <-- playback speed \, samples/sec;
#X text 578 449 Each 100 msec \, poll phase of [phasor~] in order to change onset to reflect it, f 38;
#X text 104 444 naive way: just run a phasor into [tabread4~], f 16;
#X text 105 544 convert phase to range +/- 5000 -->, f 18;
#X connect 0 0 2 0;
#X connect 1 0 23 0;
#X connect 2 0 30 0;
#X connect 4 0 25 0;
#X connect 5 0 40 0;
#X connect 5 0 53 0;
#X connect 6 0 3 0;
#X connect 7 0 4 1;
#X connect 7 0 42 0;
#X connect 8 0 4 1;
#X connect 8 0 42 0;
#X connect 9 0 10 0;
#X connect 10 0 22 0;
#X connect 11 0 13 0;
#X connect 11 0 17 0;
#X connect 11 0 12 1;
#X connect 11 0 16 0;
#X connect 12 0 15 0;
#X connect 13 0 11 1;
#X connect 14 0 21 0;
#X connect 14 1 11 0;
#X connect 17 0 18 1;
#X connect 17 0 19 0;
#X connect 17 1 18 0;
#X connect 18 0 19 1;
#X connect 19 0 21 1;
#X connect 21 0 26 0;
#X connect 22 0 0 0;
#X connect 23 0 32 0;
#X connect 24 0 1 1;
#X connect 25 0 6 0;
#X connect 26 0 31 0;
#X connect 27 0 28 1;
#X connect 28 0 33 0;
#X connect 29 0 28 0;
#X connect 29 1 27 0;
#X connect 30 0 14 0;
#X connect 30 0 20 0;
#X connect 31 0 24 0;
#X connect 32 0 2 0;
#X connect 32 0 12 0;
#X connect 33 0 30 1;
#X connect 34 0 35 0;
#X connect 35 0 37 0;
#X connect 37 0 36 0;
#X connect 38 0 34 0;
#X connect 38 0 36 0;
#X connect 38 0 64 0;
#X connect 40 0 4 0;
#X connect 42 0 48 0;
#X connect 48 0 61 0;
#X connect 48 1 18 1;
#X connect 48 1 11 1;
#X connect 53 0 1 0;
#X connect 53 0 29 0;
#X connect 61 0 14 0;
