#N canvas 506 38 613 631 12;
#X declare -stdpath ./;
#X obj 96 367 mtof;
#X floatatom 96 344 5 0 0 0 - \$0-pit - 0;
#X obj 72 540 output~;
#X obj 71 417 lop~;
#X obj 71 314 noise~;
#X floatatom 96 392 7 0 0 0 - - - 0;
#X text 107 416 low-pass filter;
#X obj 145 504 tabwrite~ H01-graph;
#X obj 145 472 metro 250;
#X obj 145 447 tgl 19 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000 0 1;
#X text 170 446 graphing on/off;
#X text 399 518 --- 0.02 sec ---;
#X text 33 133 The lop~ object is normalized to pass DC (the lowest frequency) with a gain of one. Higher frequencies are progressively more and more attenuated. The lower the cutoff frequency \, the lower the total power of the filtered noise. If you graph the output you'll see that the waveform gets smoother (and smaller overall) as the cutoff frequency is lowered., f 75;
#X text 40 212 At the cutoff frequency the gain is about -3 dB \, and above that the gain drops a further 6 dB per octave. (Sometimes one uses the word "rolloff" instead of "cutoff" to emphasize the gradual way the gain drops off with frequency.), f 74;
#X text 125 313 white noise \, test signal;
#X text 80 22 ONE-POLE LOW-PASS FILTER;
#N canvas 0 0 450 300 (subpatch) 0;
#X array H01-graph 882 float 0;
#X coords 0 1 881 -1 200 140 1 0 0;
#X restore 357 372 graph;
#X text 140 343 <-- cutoff (pitch units);
#X text 155 391 <-- cutoff (Hertz);
#N canvas 774 414 291 271 init 0;
#X obj 107 103 loadbang;
#X obj 107 168 s \$0-pit;
#X msg 107 135 60;
#X obj 79 218 declare -stdpath ./;
#X text 42 27 This subpatch initializes the patch and loads a value in the pitch number box., f 30;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 227 558 pd init;
#X text 33 54 This and the following patches show how to use filters in Pd \, starting with the simplest one: the one-pole low-pass filter. Here we test it with an input of white noise. The [lop~] object does the filtering. Its left inlet takes an audio signal to be filtered \, and its right inlet takes messages or signals to set its cutoff frequency in Hertz., f 75;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 3 0 2 0;
#X connect 3 0 7 0;
#X connect 4 0 3 0;
#X connect 5 0 3 1;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
