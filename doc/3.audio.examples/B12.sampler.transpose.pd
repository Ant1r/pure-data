#N canvas 375 38 837 700 12;
#X declare -stdpath ./;
#N canvas 0 0 450 300 (subpatch) 0;
#X array table21 44103 float 2;
#X coords 0 1.02 44103 -1.02 200 130 1;
#X restore 559 325 graph;
#X obj 366 562 loadbang;
#X floatatom 47 291 6 0 0 0 - - - 0;
#X obj 47 326 * 441;
#X obj 47 456 +~ 1;
#X obj 364 437 adc~ 1;
#X obj 364 462 hip~ 5;
#X obj 81 544 *~;
#X obj 143 456 line~;
#X obj 143 406 * 441;
#X floatatom 143 381 5 0 0 0 - - - 0;
#X obj 143 431 pack 0 100;
#X obj 81 485 +~;
#X obj 143 481 samphold~;
#X obj 47 381 samphold~;
#X obj 47 351 sig~;
#X obj 47 431 *~;
#X obj 228 504 r~ phase;
#X obj 29 245 s~ phase;
#X obj 107 352 r~ phase;
#X obj 65 408 r~ phase;
#X obj 203 457 r~ phase;
#X obj 188 351 s chunk-size;
#X floatatom 29 91 5 0 0 0 - - - 0;
#X obj 188 326 * 0.01;
#X text 284 331 chunk size;
#X text 284 353 in seconds;
#X obj 40 146 r chunk-size;
#X obj 40 171 t b f;
#X obj 29 195 /;
#X text 89 172 divide speed change by chunk;
#X text 87 193 size to get loop frequency;
#X text 376 85 The transposition is frequency in Hz. divided by chunk size in seconds. This patch calculates the loop frequency as a function of desired transposition, f 60;
#X text 376 136 Notice now that we get Doppler effects when the chunk size changes. You can suppress that if you don't want it \, by converting the chunk size to an audio signal \, sampling and holding it. But then there would be more work to deal with very low frequencies never triggering the sample and hold...;
#X obj 366 616 soundfiler;
#X obj 29 68 loadbang;
#X obj 228 528 -~ 0.5;
#X obj 228 552 *~ 0.5;
#X obj 228 575 cos~;
#X obj 81 605 output~;
#X obj 81 510 tabread4~ table21;
#X text 459 569 v-- re-read original table;
#X text 588 459 --- 44103 samples ---;
#X obj 29 116 expr pow(2 \, $f1/120);
#X text 190 115 speed change;
#X text 376 218 You might also want to have a way to retrigger the loop to sync it with some other process. By the time we had all this built the patch would be fairly involved. For now \, we'll move on to the next topic...;
#X obj 29 219 phasor~;
#X obj 364 517 tabwrite~ table21;
#X msg 366 589 read ../sound/voice.wav table21;
#X obj 639 25 declare -stdpath ./;
#X obj 379 490 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X obj 81 572 hip~ 5;
#X text 71 91 <-- transposition (10ths of a halftone);
#X text 95 290 <-- chunk size (100ths of a second);
#X text 184 381 <-- read point in 100ths of a second;
#X obj 38 19 cnv 5 5 25 empty empty Calculating\ Loop\ Frequency\ as\ function\ of\ Transposition 15 13 0 16 #dfdfdf #202020 0;
#X text 403 489 <-- record;
#X connect 1 0 48 0;
#X connect 2 0 3 0;
#X connect 2 0 24 0;
#X connect 3 0 15 0;
#X connect 4 0 12 0;
#X connect 5 0 6 0;
#X connect 6 0 47 0;
#X connect 7 0 51 0;
#X connect 8 0 13 0;
#X connect 9 0 11 0;
#X connect 10 0 9 0;
#X connect 11 0 8 0;
#X connect 12 0 40 0;
#X connect 13 0 12 1;
#X connect 14 0 16 0;
#X connect 15 0 14 0;
#X connect 16 0 4 0;
#X connect 17 0 36 0;
#X connect 19 0 14 1;
#X connect 20 0 16 1;
#X connect 21 0 13 1;
#X connect 23 0 43 0;
#X connect 24 0 22 0;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X connect 28 1 29 1;
#X connect 29 0 46 0;
#X connect 35 0 23 0;
#X connect 36 0 37 0;
#X connect 37 0 38 0;
#X connect 38 0 7 1;
#X connect 40 0 7 0;
#X connect 43 0 29 0;
#X connect 46 0 18 0;
#X connect 48 0 34 0;
#X connect 50 0 47 0;
#X connect 51 0 39 0;
