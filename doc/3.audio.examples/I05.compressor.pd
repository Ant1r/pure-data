#N canvas 500 65 576 508 12;
#X declare -stdpath ./;
#N canvas 394 108 652 570 fft-analysis 0;
#X obj 101 425 *~;
#X obj 62 425 *~;
#X obj 62 126 *~;
#X obj 62 96 inlet~;
#X obj 62 149 rfft~;
#X obj 62 488 *~;
#X obj 153 189 *~;
#X obj 62 454 rifft~;
#X obj 62 511 outlet~;
#X obj 119 189 *~;
#X obj 119 212 +~;
#X obj 119 363 clip~;
#X obj 151 315 r squelch;
#X obj 97 124 tabreceive~ \$0-hann;
#X obj 151 338 expr 0.01*$f1*$f1;
#X obj 119 393 *~ 0.00065;
#X obj 119 237 +~ 1e-20;
#X obj 100 482 tabreceive~ \$0-hann;
#X text 69 13 As in the previous patch \, this works by multiplying each channel of the Fourier analysis by a real number computed from the magnitude. If the magnitude is "m" \, the correction factor is 1/m \, but only to an upper limit controlled by the "squelch" parameter., f 68;
#X text 193 186 squared magnitude;
#X text 187 238 protect against divide-by-zero;
#X text 200 393 normalize for 1024-point \, overlap-4 Hann;
#X text 117 149 outputs complex amplitudes;
#X text 166 363 limit the gain to squelch * squelch/100;
#X text 131 416 multiply gain by real and complex part of the amplitude, f 29;
#X obj 119 274 rsqrt~;
#X text 169 274 reciprocal square root;
#X obj 360 113 r window-size;
#X msg 360 139 set \$1 4;
#X obj 360 165 block~;
#X connect 0 0 7 1;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 9 0;
#X connect 4 0 9 1;
#X connect 4 0 1 0;
#X connect 4 1 6 0;
#X connect 4 1 6 1;
#X connect 4 1 0 0;
#X connect 5 0 8 0;
#X connect 6 0 10 1;
#X connect 7 0 5 0;
#X connect 9 0 10 0;
#X connect 10 0 16 0;
#X connect 11 0 15 0;
#X connect 12 0 14 0;
#X connect 13 0 2 1;
#X connect 14 0 11 2;
#X connect 15 0 0 1;
#X connect 15 0 1 1;
#X connect 16 0 25 0;
#X connect 17 0 5 1;
#X connect 25 0 11 0;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X restore 114 294 pd fft-analysis;
#X floatatom 161 196 5 1 200 0 squelch squelch-set squelch 16;
#N canvas 406 293 420 439 test-signal 0;
#X obj 126 276 line~;
#X obj 126 369 outlet~;
#X msg 126 251 0 \, \$1 \$2;
#X obj 179 172 /;
#X obj 263 141 * 0.001;
#X obj 126 329 hip~ 5;
#X obj 79 55 loadbang;
#X msg 79 150 1;
#X obj 79 172 metro 1000;
#X obj 217 111 t b b f;
#X obj 99 110 t b f;
#X obj 126 301 tabread4~ \$0-sample;
#X text 63 10 test signal: looped sample playback;
#X obj 98 86 r \$0-samplength;
#X obj 217 85 r \$0-insamprate;
#X obj 126 225 pack f f;
#X obj 79 197 float;
#X connect 0 0 11 0;
#X connect 2 0 0 0;
#X connect 3 0 8 1;
#X connect 3 0 15 1;
#X connect 4 0 3 1;
#X connect 5 0 1 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 16 0;
#X connect 9 0 7 0;
#X connect 9 1 3 0;
#X connect 9 2 4 0;
#X connect 10 0 7 0;
#X connect 10 1 3 0;
#X connect 10 1 16 1;
#X connect 11 0 5 0;
#X connect 13 0 10 0;
#X connect 14 0 9 0;
#X connect 15 0 2 0;
#X connect 16 0 15 0;
#X restore 114 263 pd test-signal;
#X obj 114 327 output~;
#N canvas 444 61 780 500 insample 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-sample 155944 float 2;
#X coords 0 1 155944 -1 347 169 1;
#X restore 364 263 graph;
#X obj 74 174 soundfiler;
#X obj 127 84 symbol \$0-sample;
#X obj 74 114 pack s s;
#X msg 74 145 read -resize \$1 \$2;
#X obj 138 262 s \$0-samplength;
#X obj 74 247 /;
#X obj 74 281 * 1000;
#X obj 74 43 inlet;
#X obj 271 334 outlet;
#X msg 141 202 \$1;
#X obj 141 232 s \$0-insamprate;
#X obj 74 79 t a b;
#X obj 316 107 hip~ 5;
#X obj 316 83 adc~ 1;
#X obj 303 33 inlet;
#X obj 452 83 samplerate~;
#X obj 303 155 tabwrite~ \$0-sample;
#X obj 452 198 s \$0-insamprate;
#X obj 465 167 s \$0-sample;
#X msg 465 140 resize \$1;
#X obj 465 111 * 2;
#X text 536 140 2 seconds;
#X msg 271 191 2000;
#X connect 1 0 5 0;
#X connect 1 0 6 0;
#X connect 1 1 10 0;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X connect 8 0 12 0;
#X connect 10 0 6 1;
#X connect 10 0 11 0;
#X connect 12 0 3 0;
#X connect 12 1 2 0;
#X connect 13 0 17 0;
#X connect 14 0 13 0;
#X connect 15 0 16 0;
#X connect 15 0 17 0;
#X connect 15 0 23 0;
#X connect 16 0 18 0;
#X connect 16 0 21 0;
#X connect 20 0 19 0;
#X connect 21 0 20 0;
#X connect 23 0 9 0;
#X restore 299 323 pd insample;
#X text 92 431 updated for Pd version 0.39;
#X text 63 61 Here we divide each complex channel in the Fourier analysis by its own magnitude to "flatten" the spectrum. The "squelch" control limits the amplitude boost the algorithm will apply. If infinite \, you'll get a white spectrum. If less \, the louder parts of the spectrum will be flattened but the quieter ones will only be boosted by the squelch value., f 61;
#X text 84 24 DYNAMIC RANGE COMPRESSION BY FOURIER ANALYSIS CHANNEL;
#X floatatom 299 359 8 0 0 0 - - - 0;
#X obj 373 293 bng 22 250 50 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000;
#X text 364 360 sample length \, msec;
#X msg 290 207 ../sound/bell.aiff;
#X msg 299 230 ../sound/voice.wav;
#X msg 307 254 ../sound/voice2.wav;
#X text 448 205 change input sound, f 7;
#X obj 290 179 loadbang;
#N canvas 580 123 518 506 hann-window 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-hann 1024 float 0;
#X coords 0 1 1023 0 227 152 1;
#X restore 240 262 graph;
#X obj 112 366 osc~;
#X obj 112 391 *~ -0.5;
#X obj 112 415 +~ 0.5;
#X obj 95 458 tabwrite~ \$0-hann;
#X obj 64 236 swap;
#X obj 64 260 /;
#X msg 140 150 resize \$1;
#X obj 140 174 s \$0-hann;
#X msg 137 336 0;
#X obj 64 332 t f b;
#X obj 64 30 loadbang;
#X msg 64 58 1024;
#X floatatom 64 85 5 0 0 0 - - - 0;
#X obj 75 114 s window-size;
#X text 107 58 default window size;
#X floatatom 64 294 8 0 0 0 - - - 0;
#X text 130 294 window hz;
#X text 234 126 Calculate Hann window table (variable window size) by getting the period of the window and Hz. Also get the analysis window size in seconds and msec., f 33;
#X obj 89 206 samplerate~;
#X obj 64 160 t f b f;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 6 0;
#X connect 5 1 6 1;
#X connect 6 0 16 0;
#X connect 7 0 8 0;
#X connect 9 0 1 1;
#X connect 10 0 1 0;
#X connect 10 1 4 0;
#X connect 10 1 9 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 13 0 20 0;
#X connect 16 0 10 0;
#X connect 19 0 5 1;
#X connect 20 0 5 0;
#X connect 20 1 19 0;
#X connect 20 2 7 0;
#X restore 322 434 pd hann-window;
#X text 401 296 <-- record 2 seconds, f 10;
#N canvas 208 188 323 266 init 0;
#X obj 60 146 declare -stdpath ./;
#X obj 64 61 loadbang;
#X msg 64 87 \; squelch-set 10;
#X connect 1 0 2 0;
#X restore 457 434 pd init;
#X connect 0 0 3 0;
#X connect 2 0 0 0;
#X connect 4 0 8 0;
#X connect 9 0 4 1;
#X connect 11 0 4 0;
#X connect 12 0 4 0;
#X connect 13 0 4 0;
#X connect 15 0 11 0;
