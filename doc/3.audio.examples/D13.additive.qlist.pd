#N canvas 421 53 665 605 12;
#X declare -stdpath ./;
#X obj 392 354 qlist;
#X msg 476 302 read qlist.txt;
#X obj 476 257 loadbang;
#X text 249 140 start;
#X text 486 281 reread file;
#X msg 392 212 rewind;
#X msg 460 212 next;
#X msg 241 164 tempo 1 \, bang;
#X text 404 191 single step;
#X obj 203 316 r #;
#X obj 49 227 output~;
#X obj 511 161 declare -stdpath ./;
#X obj 49 178 clone -s 1 osc-voice 8;
#X text 436 490 click to open:;
#X obj 421 516 text define -k additive;
#A set # This is the contents of a [text] object for the D13.additive.qlist patch \, which demonstrates an oscillator bank. \; # comments start with a "#" which must be followed by a space. The comment is terminated by a semicolon \; # first an arpeggio. You can group them in lines as you please. The 100s at the beginnings of lines are delay times. \; pit1 89 \; amp1 80 \; 100 pit2 72 \; amp2 80 \; 100 pit3 57 \; amp3 90 \; 100 pit4 84 \; amp4 78 \; 100 pit5 74 \; amp5 74 \; 100 pit6 73 \; amp6 74 \; 100 pit7 100 \; amp7 78 \; 100 pit8 37 \; amp8 95 \; # after a 600-msec rest \, gliss four of the oscillators to new frequencies. \; 600 pit1 70 1000 \; 300 pit8 40 1000 \; 300 pit4 89 1000 \; 300 pit7 95 1000 \; # a second later \, turn them off with decay time 1500 \; 1000 amp1 0 1500 \; amp2 0 1500 \; amp3 0 1500 \; amp4 0 1500 \; amp5 0 1500 \; amp6 0 1500 \; amp7 0 1500 \; amp8 0 1500 \; # and re-attack them.. \; 1000 amp1 85 5 \; amp2 85 5 \; amp3 85 5 \; amp4 90 5 \; amp5 85 5 \; amp6 85 5 \; amp7 90 5 \; amp8 85 5 \; # this time \, try varying decay times. \; 10 amp1 0 2000 \; amp2 0 2000 \; amp3 0 2000 \; amp4 0 500 \; amp5 0 1000 \; amp6 0 1000 \; amp7 0 500 \; amp8 0 4000 \;;
#X obj 93 560 text sequence additive -g;
#X obj 203 343 print comments;
#X msg 69 391 1;
#X msg 103 475 step;
#X msg 93 447 line 0;
#X text 145 446 <-- rewind;
#X text 141 476 <-- step through;
#X text 87 318 this is where comments go to:, f 15;
#X msg 347 164 tempo 5 \, bang;
#X msg 126 531 stop;
#X text 167 531 <-- stop;
#X msg 103 391 5;
#X msg 69 417 tempo \$1 permsec;
#X msg 119 503 line 0 \, auto;
#X text 216 500 <-- rewind and play;
#X text 244 517 automatically, f 15;
#X text 356 405 You can also use the more modern [text sequence] object instead which is more powerful. It can also save contents of the sequence with the patch., f 39;
#X text 54 56 Here is an eight voice additive synthesis patch controlled by a [qlist]. Open a text editor on the file \, "qlist.txt" \, to see how the oscillators' amplitudes and frequencies are specified. The abstraction \, [osc-voice] is loaded 8 times inside [clone] and shows an effective way to make patches react to [qlist] objects but also to mousing., f 81;
#X obj 91 16 cnv 5 5 25 empty empty Using\ [qlist]\ to\ Sequence\ an\ Oscillator\ Bank 15 13 0 16 #dfdfdf #202020 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 9 0 16 0;
#X connect 12 0 10 0;
#X connect 17 0 27 0;
#X connect 18 0 15 0;
#X connect 19 0 15 0;
#X connect 23 0 0 0;
#X connect 24 0 15 0;
#X connect 26 0 27 0;
#X connect 27 0 15 0;
#X connect 28 0 15 0;
