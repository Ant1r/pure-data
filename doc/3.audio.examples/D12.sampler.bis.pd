#N canvas 266 156 1091 715 12;
#X declare -stdpath ./;
#N canvas 642 163 417 426 samples 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array sample5 155944 float 2;
#X coords 0 1.02 155944 -1.02 200 130 1;
#X restore 116 45 graph;
#N canvas 0 0 450 300 (subpatch) 0;
#X array sample6 39075 float 2;
#X coords 0 1.02 39075 -1.02 200 130 1;
#X restore 116 210 graph;
#X restore 487 556 pd samples;
#X text 786 487 sample number;
#X obj 548 143 poly 8 1;
#X obj 617 366 output~;
#X obj 548 168 swap;
#X obj 548 215 route 0;
#X obj 548 192 pack;
#X text 937 440 amplitude;
#X text 936 464 pitch;
#X text 855 373 ARGUMENTS FOR:;
#X text 788 415 pitch;
#X text 788 439 amplitude;
#X text 788 463 duration;
#X obj 603 81 r onoff;
#X text 936 397 ON/OFF TRANSITIONS:;
#X text 789 396 ENTIRE NOTES:;
#X text 936 419 tag;
#X text 786 514 sample onset;
#X text 786 540 rise time;
#X text 787 564 decay time;
#X text 933 489 (same other 4);
#X obj 779 179 f;
#X obj 815 179 + 1;
#X obj 789 205 mod 1e+06;
#X obj 860 85 r note;
#X obj 833 148 t b f;
#X obj 874 316 s onoff;
#X obj 828 261 pipe;
#X obj 828 284 pack;
#X msg 299 538 \; onoff 1 0;
#X msg 300 580 \; onoff 2 0;
#X text 35 171 Messages to "onoff" require a tag \, which is a number shared between the note-on and note-off message so that we can track down the voice to turn it off. If you're using MIDI input \, you can just re-use the pitch as a tag., f 67;
#X text 92 633 single messages to do both as before:, f 18;
#X obj 603 106 unpack f f f f f f f;
#X obj 617 275 pack f f f f f f f;
#X obj 860 111 unpack f f f f f f f;
#X obj 874 261 pack f f f f f f f;
#N canvas 333 157 708 551 recorder 0;
#X obj 152 363 adc~ 1;
#X obj 152 391 hip~ 5;
#X obj 221 421 line~;
#X obj 152 420 *~;
#X msg 221 393 1;
#X obj 280 358 del 3990;
#X msg 257 393 0 10;
#X obj 152 471 tabwrite~ sample5;
#X obj 66 296 makefilename sample%1;
#X msg 66 325 set \$1 \, bang;
#X msg 324 329 stop;
#X msg 280 329 bang;
#X obj 406 331 loadbang;
#X obj 402 233 openpanel;
#X text 446 370 v-- re-read original samples;
#X obj 242 168 route record stop reload browse;
#X obj 406 452 soundfiler;
#X msg 402 260 read \$1 sample5;
#X obj 402 287 soundfiler;
#X text 228 21 record \, etc.;
#X msg 242 48 record 1;
#X msg 256 92 stop;
#X msg 249 70 record 2;
#X msg 262 114 reload;
#X msg 267 136 browse;
#X msg 406 394 read -resize ../sound/bell.aiff sample5 \, read -resize ../sound/voice2.wav sample6, f 40;
#X obj 402 201 bng 19 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X text 429 201 <-- browse for samples;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 1;
#X connect 3 0 7 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 10 0 5 0;
#X connect 11 0 5 0;
#X connect 12 0 25 0;
#X connect 13 0 17 0;
#X connect 15 0 8 0;
#X connect 15 0 11 0;
#X connect 15 0 4 0;
#X connect 15 1 6 0;
#X connect 15 1 10 0;
#X connect 15 2 25 0;
#X connect 15 3 26 0;
#X connect 17 0 18 0;
#X connect 20 0 15 0;
#X connect 21 0 15 0;
#X connect 22 0 15 0;
#X connect 23 0 15 0;
#X connect 24 0 15 0;
#X connect 25 0 16 0;
#X connect 26 0 13 0;
#X restore 487 580 pd recorder;
#X obj 592 447 declare -stdpath ./;
#X obj 617 321 clone -s 1 sampvoice2 8;
#X msg 548 242 \$1 0;
#X msg 594 243 \$2;
#X msg 99 538 \; onoff 1 90 60 5 0 0 100;
#X msg 100 580 \; onoff 2 90 48 5 0 0 100;
#X msg 230 633 \; note 51 90 1000 5 0 0 100;
#X text 106 513 separate messages for note on and off:;
#X text 36 64 Here is a variation on the polyphonic sampler \, which can take separate messages to start and stop notes (so that you can attach it to a MIDI keyboard \, for example.) "Note" messages act as before \, but in an intermediate step they are split onto note-on and note-off messages \, sent to "onoff". You can alternatively send messages straight to "onoff" if you don't know the duration in advance., f 67;
#X text 35 240 Messages to "onoff" whose amplitude is zero are note-off messages (the other parameters of note-off messages are ignored). The [sampvoice2] abstraction is a modification of [sampvoice] which looks at the amplitude field to decide whether to begin or end a note., f 67;
#X text 35 320 To convert "note" messages to pairs of "onoff" messages \, first a counter generates a tag. The [pipe] object delays a copy of the tag \, which the following [pack] object converts into a note-off message (a pair of numbers \, the tag and a zero.), f 67;
#X text 35 386 Under [r onoff] \, the [poly] object allocates a voice number \, putting it out paired with velocity. After swapping the two and packing them into a single message \, the amplitude is checked against zero by the [route 0] object. If zero \, the "\$1 0" message outputs a list with "voice number" and "0". Otherwise \, the "\$2" retrieves the voice number from [poly] which gets packed in with the note data and routed to the appropriate [sampvoice2] copy inside [clone]., f 67;
#X obj 242 13 cnv 5 5 25 empty empty Polyphonic\ Sampler\ with\ Separate\ Note-On/Off\ Messages 15 13 0 16 #dfdfdf #202020 0;
#X connect 2 0 4 0;
#X connect 2 2 4 1;
#X connect 4 0 6 0;
#X connect 4 1 6 1;
#X connect 5 0 40 0;
#X connect 5 1 41 0;
#X connect 6 0 5 0;
#X connect 13 0 33 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 21 1;
#X connect 23 0 27 0;
#X connect 23 0 36 0;
#X connect 24 0 35 0;
#X connect 25 0 21 0;
#X connect 25 1 36 2;
#X connect 27 0 28 0;
#X connect 28 0 26 0;
#X connect 33 0 2 0;
#X connect 33 1 2 1;
#X connect 33 1 34 1;
#X connect 33 2 34 2;
#X connect 33 3 34 3;
#X connect 33 4 34 4;
#X connect 33 5 34 5;
#X connect 33 6 34 6;
#X connect 34 0 39 0;
#X connect 35 0 25 0;
#X connect 35 1 36 1;
#X connect 35 2 27 1;
#X connect 35 3 36 3;
#X connect 35 4 36 4;
#X connect 35 5 36 5;
#X connect 35 6 36 6;
#X connect 36 0 26 0;
#X connect 39 0 3 0;
#X connect 40 0 39 0;
#X connect 41 0 34 0;
