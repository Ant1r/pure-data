#N canvas 553 38 513 624 12;
#X declare -stdpath ./;
#X floatatom 111 203 5 0 150 0 - \$0-pitch - 0;
#X text 87 27 SWEEPING FILTERS;
#X obj 111 250 phasor~;
#X obj 123 408 +~;
#X floatatom 141 383 5 0 100 0 - \$0-offset - 0;
#X floatatom 124 279 5 0 0 0 - \$0-speed - 0;
#X floatatom 142 330 5 0 100 0 - \$0-depth - 0;
#X floatatom 136 463 5 0 1000 0 - \$0-q - 0;
#X obj 111 488 vcf~;
#X text 201 302 LFO for sweep;
#X text 159 407 add base to sweep;
#X text 168 437 convert to Hz.;
#X obj 111 529 output~;
#X obj 111 226 mtof;
#X obj 124 301 phasor~;
#X obj 124 355 *~;
#X text 52 140 Note the different effects of negative and positive sweep speeds., f 53;
#X obj 123 437 mtof~;
#X text 52 59 If you want actively changing center frequencies \, use [vcf~] instead of [bp~]. The [vcf~] module takes an audio signal to set center frequency (Q is still set by messages though) \, which makes it computationally somewhat more expensive than [bp~]., f 53;
#N canvas 706 247 304 346 init 0;
#X obj 85 23 loadbang;
#X obj 85 47 bng 19 250 50 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000;
#X obj 85 76 f \$0;
#X msg 85 100 \; \$1-pitch 48 \; \$1-speed -2 \; \$1-depth 27 \; \$1-offset 56 \; \$1-q 2;
#X obj 86 277 declare -stdpath ./;
#X text 66 209 This subpatch initializes the patch and loads values in number boxes., f 27;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X restore 260 514 pd init;
#X text 179 461 <-- Q (selectivity);
#X text 184 383 <-- base center frequency;
#X text 184 331 <-- sweep depth;
#X text 166 278 <-- sweep speed;
#X text 157 203 <-- pitch;
#X text 171 251 [phasor~] as a sawtooth like oscillator;
#X connect 0 0 13 0;
#X connect 2 0 8 0;
#X connect 3 0 17 0;
#X connect 4 0 3 1;
#X connect 5 0 14 0;
#X connect 6 0 15 1;
#X connect 7 0 8 2;
#X connect 8 0 12 0;
#X connect 13 0 2 0;
#X connect 14 0 15 0;
#X connect 15 0 3 0;
#X connect 17 0 8 1;
