#N canvas 486 38 568 698 12;
#X declare -stdpath ./;
#X obj 41 579 output~;
#X obj 102 490 metro 250;
#X obj 102 463 tgl 19 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000 0 1;
#X text 125 462 graphing on/off;
#N canvas 0 0 450 300 (subpatch) 0;
#X array H02-graph 882 float 0;
#X coords 0 1 881 -1 200 140 1 0 0;
#X restore 328 306 graph;
#X text 372 452 --- 0.02 sec ---;
#X text 53 48 Many synthesis algorithms and transformations can have outputs with a zero-frequency component (commonly called DC for "direct current"). These are inaudible and sometimes cause distortion in audio output devices \, or when converting to fixed-point soundfile formats. It is often desirable to filter an audio signal to remove its DC component., f 65;
#X obj 40 269 +~ 1;
#X text 95 417 high-pass filter;
#X floatatom 79 380 5 0 0 0 - - - 0;
#X msg 79 305 0;
#X text 107 242 sinusoidal test signal;
#X text 86 269 add "DC";
#X text 117 305 zero for no filtering;
#X msg 89 328 3;
#X text 124 329 3 (or so) to remove DC;
#X obj 40 244 osc~ 220;
#X msg 97 353 220;
#X text 102 12 ONE-POLE \, ONE-ZERO HIGH-PASS FILTER;
#X obj 102 529 tabwrite~ H02-graph;
#X obj 365 510 declare -stdpath ./;
#X text 53 144 The simplest way to do this is to use a one-pole low-pass filter \, tuned to a low frequency such as 3 Hertz \, and to subtract its output from the original. This difference is called a one-pole \, one-zero high-pass filter \, and it is used so often that Pd provides one in the [hip~] object., f 65;
#X text 161 578 The [output~] abstraction includes [hip~] objects for this reason., f 34;
#X text 129 353 higher frequencies affect the audible part of the signal as well., f 23;
#X obj 40 416 hip~ 3;
#X connect 1 0 19 0;
#X connect 2 0 1 0;
#X connect 7 0 24 0;
#X connect 9 0 24 1;
#X connect 10 0 9 0;
#X connect 14 0 9 0;
#X connect 16 0 7 0;
#X connect 17 0 9 0;
#X connect 24 0 0 0;
#X connect 24 0 19 0;
