#N canvas 564 61 567 648 12;
#X declare -stdpath ./;
#N canvas 456 42 579 692 16x 0;
#X obj 84 387 *~ 0.064;
#X obj 84 412 rpole~ 0.93538;
#X obj 84 439 *~ 0.00431;
#X obj 84 465 cpole~ 0.96559 0.05592;
#X obj 84 505 cpole~ 0.96559 -0.05592;
#X obj 84 532 *~ 0.125;
#X obj 84 559 rzero~ -1;
#X obj 84 585 rzero~ -1;
#X obj 83 613 rzero~ -1;
#X obj 82 133 phasor~;
#X obj 83 647 outlet~;
#X obj 100 202 wrap~;
#X obj 100 172 -~;
#X obj 101 246 *~;
#X obj 83 275 +~;
#X obj 169 267 phasor~;
#X obj 205 321 wrap~;
#X obj 205 297 -~;
#X obj 227 355 *~;
#X obj 169 362 +~;
#X obj 84 347 +~;
#X obj 296 469 block~ 1024 1 16;
#X obj 169 30 inlet;
#X obj 208 81 r osc-params;
#X obj 169 211 *~;
#X obj 169 239 +~;
#X msg 293 409 \; osc-params 0.5 -0.5 0.5 0.5 1 0.5;
#X obj 293 383 loadbang;
#X obj 208 108 unpack f f f f f f;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 4 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 9 0 12 0;
#X connect 9 0 14 0;
#X connect 11 0 13 0;
#X connect 12 0 11 0;
#X connect 13 0 14 1;
#X connect 14 0 20 0;
#X connect 15 0 17 0;
#X connect 15 0 19 0;
#X connect 16 0 18 0;
#X connect 17 0 16 0;
#X connect 18 0 19 1;
#X connect 19 0 20 1;
#X connect 20 0 0 0;
#X connect 22 0 9 0;
#X connect 22 0 24 0;
#X connect 23 0 28 0;
#X connect 24 0 25 0;
#X connect 25 0 15 0;
#X connect 27 0 26 0;
#X connect 28 0 12 1;
#X connect 28 1 13 1;
#X connect 28 2 17 1;
#X connect 28 3 18 1;
#X connect 28 4 24 1;
#X connect 28 5 25 1;
#X restore 108 224 pd 16x;
#X obj 108 331 output~;
#X text 313 612 Updated for Pd version 0.39;
#X text 45 22 THE CLASSIC SUBTRACTIVE SYNTH SOUND;
#X obj 188 196 *~;
#X obj 188 166 +~ 0.2;
#X obj 188 221 *~ 2000;
#X obj 175 296 *~;
#X obj 108 292 *~;
#X obj 108 186 mtof;
#X obj 68 66 r \$0-note;
#X obj 68 121 makenote 1;
#X obj 372 210 + 20;
#X obj 372 125 tgl 19 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000 0 1;
#X obj 372 299 s \$0-note;
#X obj 372 182 random 70;
#X obj 108 256 vcf~ 3;
#X floatatom 265 173 6 0 0 0 - - - 0;
#X floatatom 265 221 7 0 0 0 - - - 0;
#X obj 265 197 mtof;
#X obj 175 260 adsr 2 30 200 50 500;
#X obj 188 141 adsr 1 10 200 50 500;
#X obj 82 151 poly 1 1;
#X floatatom 432 125 6 0 0 0 - - - 0;
#X floatatom 439 218 5 0 0 0 - - - 0;
#X obj 68 92 unpack f f;
#X obj 386 27 declare -stdpath ./;
#X listbox 372 271 10 0 0 0 - - - 0;
#X text 448 267 picth and duration, f 9;
#X text 478 217 duration;
#X obj 175 108 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 372 242 pack f 300;
#X obj 372 159 metro 500;
#X text 54 545 You can add controls to change the parameters of the ADSR envelopes and/or the [vcf~] "Q" parameter. The oscillators' waveforms and tuning relationship is controlled by other parameters set within the [pd 16x] subwindow., f 67;
#X text 54 407 Now that we can make reasonably high-quality classic waveforms using upsampling \, we combine an upsampled oscillator with a "VCF" filter and ADSR generators to control the filter resonant frequency and the amplitude to make the classic subtractive synthesis sound. Send an [s \$0-note] object a pitch/duration pair to play a note \, wihch is sent to [makenote] to generate note ons/offs and the [poly] object is used here to make it a simple polyphonic synth. The velocity is set in [makenote] to an amplitude of "1" (note that classic VC synths did not have velocity sensitive keyboards!), f 67;
#X connect 0 0 16 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 5 0 4 1;
#X connect 6 0 16 1;
#X connect 7 0 8 1;
#X connect 8 0 1 0;
#X connect 9 0 0 0;
#X connect 10 0 25 0;
#X connect 11 0 22 0;
#X connect 11 1 22 1;
#X connect 12 0 31 0;
#X connect 13 0 32 0;
#X connect 15 0 12 0;
#X connect 16 0 8 0;
#X connect 17 0 19 0;
#X connect 18 0 6 1;
#X connect 19 0 18 0;
#X connect 20 0 7 0;
#X connect 20 0 7 1;
#X connect 21 0 5 0;
#X connect 22 1 9 0;
#X connect 22 2 30 0;
#X connect 23 0 32 1;
#X connect 24 0 31 1;
#X connect 25 0 11 0;
#X connect 25 1 11 2;
#X connect 27 0 14 0;
#X connect 30 0 21 0;
#X connect 30 0 20 0;
#X connect 31 0 27 0;
#X connect 32 0 15 0;
