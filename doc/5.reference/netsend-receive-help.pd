#N canvas 165 37 1068 662 12;
#X text 15 625 see also:;
#X obj 58 12 netsend;
#X text 839 626 updated for Pd version 0.51.;
#X obj 6 71 cnv 1 1050 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X text 967 32 <= click;
#N canvas 105 96 1223 494 reference 0;
#X obj 8 42 cnv 5 525 5 empty empty INLET: 8 18 0 13 #202020 #000000 0;
#X obj 8 191 cnv 2 525 2 empty empty OUTLETS: 8 12 0 13 #202020 #000000 0;
#X obj 8 283 cnv 2 525 2 empty empty ARGUMENTS: 8 12 0 13 #202020 #000000 0;
#X obj 7 361 cnv 5 525 5 empty empty empty 8 18 0 13 #202020 #000000 0;
#X obj 7 217 cnv 1 525 1 empty empty 1st: 8 12 0 13 #9f9f9f #000000 0;
#X obj 7 248 cnv 1 525 1 empty empty 2nd: 8 12 0 13 #9f9f9f #000000 0;
#X obj 7 308 cnv 1 525 1 empty empty flags: 8 12 0 13 #9f9f9f #000000 0;
#X text 68 161 send <anything> -;
#X text 145 142 list -;
#X obj 28 11 netsend;
#X text 116 222 float - nonzero if connection is open \, zero otherwise.;
#X text 115 254 anything - messages sent back from netreceive objects.;
#X text 117 333 -b: sets to binary mode (default 'FUDI')., f 43;
#X text 76 57 connect <list> -;
#X text 104 104 disconnect - close the connection., f 55;
#X text 69 123 timeout <float> - TCP connect timeout in ms (default 10000).;
#X text 195 56 sets host and port number \, an additional port argument can be set for messages sent back from the receiver., f 42;
#X obj 565 42 cnv 5 650 5 empty empty INLET: 8 18 0 13 #202020 #000000 0;
#X obj 565 157 cnv 2 650 2 empty empty OUTLETS: 8 12 0 13 #202020 #000000 0;
#X obj 565 329 cnv 2 650 2 empty empty ARGUMENTS: 8 12 0 13 #202020 #000000 0;
#X obj 564 471 cnv 5 650 5 empty empty empty 8 18 0 13 #202020 #000000 0;
#X obj 564 183 cnv 1 650 1 empty empty 1st: 8 12 0 13 #9f9f9f #000000 0;
#X obj 564 214 cnv 1 650 1 empty empty 2nd: 8 12 0 13 #9f9f9f #000000 0;
#X obj 564 352 cnv 1 650 1 empty empty flags: 8 12 0 13 #9f9f9f #000000 0;
#X obj 583 11 netreceive;
#X text 629 59 listen <float \, symbol> -;
#X text 804 58 a number sets or changes the port number (0 or negative closes the port). Optional symbol is a hostname which can be a UDP multicast address or a network interface., f 55;
#X text 677 125 send <anything> -;
#X text 727 186 anything - messages sent from connected netsend objects., f 57;
#X obj 564 419 cnv 1 650 1 empty empty args: 8 12 0 13 #9f9f9f #000000 0;
#X text 755 425 1) float - port number, f 45;
#X text 748 443 2) symbol - UDP hostname or multicast address.;
#X text 748 241 float - number of open connections for TCP connections., f 57;
#X text 755 301 list -;
#X text 609 218 (TCP connection only);
#X obj 564 269 cnv 1 650 1 empty empty rightmost: 8 12 0 13 #9f9f9f #000000 0;
#X text 653 273 (if the -f flag is given);
#X text 803 301 address and port., f 49;
#X text 754 106 list -;
#X text 744 376 -b: sets to binary mode (default 'FUDI')., f 52;
#X text 195 142 sends messages over the network., f 42;
#X text 195 161 works like 'list' (old way), f 42;
#X text 804 106 sends messages back to connected netsend objects., f 55;
#X text 804 125 works like 'list' (old way), f 55;
#X text 85 10 - send messages over a network connection.;
#X text 667 10 - listen for incoming messages from network;
#X text 117 315 -u: sets to UDP connection mode (default TCP).;
#X text 744 358 -u: sets to UDP connection mode (default TCP)., f 52;
#X text 744 394 -f: creates rightmost outlet for address & port., f 52;
#X restore 873 32 pd reference;
#X obj 167 626 fudiformat;
#X obj 91 626 oscformat;
#X text 13 326 SECURITY NOTE: Don't publish the port number of your [netreceive] unless you wouldn't mind other people being able to send you messages., f 53;
#X obj 37 38 netreceive;
#X text 121 38 - listen for incoming messages from network;
#X obj 429 323 netsend;
#X msg 446 191 disconnect;
#X text 491 322 TCP \, FUDI;
#X obj 475 352 print backwards;
#X floatatom 713 345 4 0 0 0 - - - 0;
#X msg 651 223 listen 0;
#X text 720 223 (0 or negative number to close);
#X msg 638 187 listen 3000;
#X text 747 346 <-- number of open connections;
#X text 594 152 connection request (to 'localhost' and port 3000);
#X text 454 388 "1" if connection is open \, "0" otherwise.;
#X floatatom 429 387 2 0 0 0 - - - 0;
#X obj 429 353 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 413 81 A connection request should specify the name or IP address of the other host and the port number. There should be a [netreceive] object on the remote host with a matching port number. More than one [netsed] can connect to a single [netreceive] object. More than one [netreceive] object cannot listen to the same port at the same time., f 85;
#X msg 440 466 disconnect;
#X msg 420 434 connect localhost 3001;
#X obj 420 548 netsend -u;
#X floatatom 455 493 4 0 0 0 - - - 0;
#X text 502 550 UDP \, FUDI;
#X obj 882 528 netsend 1;
#X text 954 530 (UDP);
#X text 893 577 (UDP port 3004);
#X obj 882 554 netreceive 3004 1;
#X msg 455 517 send bar \$1;
#X text 845 416 An old (pre-0.45) calling convention is provided for compatibility: a "0" or "1" for TCP or UDP respectively (as a single argument for [netsend] or as a sedond argument for [netreceive]:, f 28;
#X text 13 82 The [netsend] object sends TCP ("stream") or UDP ("datagram") messages over the network \, which can be received by [netreceive] objects on another machine running Pd. You can also use [netsend]/[netreceive] for intercommunication with other softwares on your machine (which can also be a different version/fork of Pd)., f 53;
#N canvas 277 91 1026 398 binary-mode 0;
#X msg 80 162 disconnect;
#X floatatom 108 198 4 0 255 0 - - - 0;
#X msg 64 127 connect localhost 3002;
#X msg 544 158 disconnect;
#X floatatom 562 189 4 0 0 0 - - - 0;
#X obj 519 275 netsend -u -b;
#X obj 64 303 netsend -b;
#X msg 482 111 connect localhost 3003;
#X obj 131 332 print backwards;
#X obj 607 305 print backwards;
#X obj 64 332 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X floatatom 344 251 4 0 0 0 - - - 0;
#X obj 221 250 print TCP-binary;
#X listbox 108 259 12 0 0 0 - - - 0;
#X msg 221 186 1 2 3 4;
#X text 278 187 send back;
#X text 378 252 <- number of connections, f 13;
#X text 50 51 Example of TCP connection in binary mode. In this mode \, messages consist only of numbers from 0 to 255 and lists are broken into separate numbers., f 44;
#X msg 108 226 0 1 0 \$1;
#X obj 657 245 print UDP-binary;
#X obj 519 302 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X msg 562 216 0 1 0 \$1;
#X text 472 70 Example of UDP connection in binary mode.;
#X obj 221 222 netreceive -b 3002;
#X obj 657 217 netreceive -u -b -f 3003;
#X obj 822 245 print Addres/Port;
#X connect 0 0 6 0;
#X connect 1 0 18 0;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 4 0 21 0;
#X connect 5 0 20 0;
#X connect 5 1 9 0;
#X connect 6 0 10 0;
#X connect 6 1 8 0;
#X connect 7 0 5 0;
#X connect 13 0 6 0;
#X connect 14 0 23 0;
#X connect 18 0 13 0;
#X connect 21 0 5 0;
#X connect 23 0 12 0;
#X connect 23 1 11 0;
#X connect 24 0 19 0;
#X connect 24 1 25 0;
#X restore 142 473 pd binary-mode;
#X text 13 273 The Pd distribution includes "pdsend" and "pdreceive" standalone programs that work with [netsend] and [netreceive] in FUDI mode.;
#X obj 638 345 print TCP;
#X obj 643 563 print UDP;
#X text 626 427 The '-u' flag sets to UDP mode. You can't send messages back in this mode and [netreceive] can't show number of connections., f 25;
#X obj 420 577 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 775 361 from [netsend] objects or other compatible clients), f 26;
#X msg 662 257 list TCP backwards;
#X listbox 465 292 20 0 0 0 - - - 0;
#X msg 465 258 list TCP Message;
#X text 803 251 lists send messages back to connected [netsend] objects, f 27;
#X text 458 232 lists sends messages;
#X obj 643 535 netreceive -u 3001;
#X text 666 289 '-f' flag creates rightmost outlet for address/port;
#X text 489 493 same as list;
#X text 543 518 (old way);
#X text 13 191 By default the messages are ASCII text messages compatible with Pd (i.e. \, numbers and symbols terminated with a semicolon -- the "FUDI" protocol). See examples to the right. A flag sets to binary messages instead (see below)., f 53;
#X text 13 380 The "-b" flag specifies binary messages instead of FUDI \, which appear in Pd as lists of numbers from 0 to 255 (open subpatch below). You could use binary mode to send OSC messages \, for instance (see help file of [oscformat]/[oscparse] for examples on this)., f 53;
#X obj 10 612 cnv 1 1050 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#N canvas 261 212 1047 513 IPv6/multicast 0;
#X obj 195 446 netsend -u;
#X msg 285 364 disconnect;
#X text 464 298 IPv4 multicast;
#X text 438 332 IPv6 multicast;
#X floatatom 298 400 5 0 0 0 - - - 0;
#X msg 275 330 connect ff00::114 3005;
#X msg 255 298 connect 239.200.200.200 3005;
#X msg 237 266 connect ::1 3005;
#X msg 218 234 connect 127.0.0.1 3005;
#X msg 195 201 connect localhost 3005;
#X text 361 203 IPv4 messages (default);
#X text 382 234 IPv4 messages;
#X text 358 267 IPv6 messages;
#X obj 58 378 netsend;
#X floatatom 97 307 5 0 0 0 - - - 0;
#X msg 58 201 connect ::1 3005;
#X text 26 17 As of 0.51 \, Pd supports IPv6 addresses \, [netsend] in UDP mode is fully "connectionless" and no longer closes if no one receives a UDP message \, and [netsend] in TCP mode has a settable connect timeout which defaults to 10 seconds., f 71;
#X text 854 277 IPv4 multicast;
#X text 839 309 IPv6 multicast;
#X msg 694 343 listen 0;
#X msg 666 308 listen 3005 ff00::114;
#X msg 646 277 listen 3005 239.200.200.200;
#X msg 616 212 listen 3005 ::1;
#X msg 607 177 listen 3005 127.0.0.1;
#X msg 627 245 listen 3005 localhost;
#X text 772 177 IPv4 messages;
#X obj 843 378 netreceive 3005 ::1, f 21;
#X text 842 341 listen for IPv6 TCP messages on localhost, f 22;
#X msg 593 144 listen 3005;
#X text 683 143 any IPv4 and IPv6 messages (default);
#X text 737 213 IPv6 messages *);
#X text 789 237 IPv4 and/or IPv6 messages (system dependent!), f 26;
#X text 603 455 *) On some systems you can also receive IPv4 messages. This certainly doesn't work on Windows!, f 50;
#X text 574 60 By default \, [netreceive] listens on all IPv4 and IPv6 interfaces \, but you can restrict it to a specific interface \, e.g. "127.0.0.1" to only receive IPv4 messages from the same computer.;
#X text 574 10 [netreceive] accepts a hostname which can be a UDP multicast address or a network interface. Note that you can't specify a remote host - that is the job of a firewall.;
#X msg 26 156 timeout 3000;
#X text 121 156 TCP connect timeout in ms (don't set it too low);
#X obj 195 478 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 58 416 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 87 283 send value;
#X floatatom 987 404 4 0 0 0 - - - 0;
#X msg 73 235 disconnect;
#X text 26 82 [netsend] supports sending IPv6 and multicast messages and will try to detect the IP version based on the given address or hostname. Hostname resolution favors IPv4 results for backwards compatibility in both [netsend] and [netreceive]., f 71;
#X obj 593 381 netreceive -u -f 3005;
#X obj 737 410 print Addres/Port, f 11;
#X obj 593 419 print UDP-hostname;
#X obj 843 405 print TCP-hostname;
#X text 342 401 send value;
#X connect 0 0 37 0;
#X connect 1 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X connect 13 0 38 0;
#X connect 14 0 13 0;
#X connect 15 0 13 0;
#X connect 19 0 43 0;
#X connect 20 0 43 0;
#X connect 21 0 43 0;
#X connect 22 0 43 0;
#X connect 23 0 43 0;
#X connect 24 0 43 0;
#X connect 26 0 46 0;
#X connect 26 1 40 0;
#X connect 28 0 43 0;
#X connect 35 0 13 0;
#X connect 41 0 13 0;
#X connect 43 0 45 0;
#X connect 43 1 44 0;
#X restore 190 558 pd IPv6/multicast;
#X text 84 519 As of 0.51 \, Pd supports IPv6 addresses. Open subpatch for more details., f 29;
#X msg 429 153 connect localhost 3000;
#X obj 638 314 netreceive -f 3000, f 22;
#X text 120 11 - send messages over a network connection;
#X text 729 187 <-- set or change port (can also be set via argument), f 27;
#X obj 818 316 print Addres/Port;
#X connect 11 0 23 0;
#X connect 11 1 14 0;
#X connect 12 0 11 0;
#X connect 16 0 59 0;
#X connect 18 0 59 0;
#X connect 23 0 22 0;
#X connect 25 0 27 0;
#X connect 26 0 27 0;
#X connect 27 0 42 0;
#X connect 28 0 34 0;
#X connect 34 0 27 0;
#X connect 44 0 59 0;
#X connect 45 0 11 0;
#X connect 46 0 45 0;
#X connect 49 0 40 0;
#X connect 58 0 11 0;
#X connect 59 0 39 0;
#X connect 59 1 15 0;
#X connect 59 2 62 0;
